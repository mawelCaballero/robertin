{"version":3,"file":"src_app_starter_starter_module_ts.js","mappings":"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","sources":["./src/app/starter/components/nivel.directive.ts","./src/app/starter/components/trend.directive.ts","./src/app/starter/starter.component.ts","./src/app/starter/starter.component.html","./src/app/starter/starter.module.ts"],"sourcesContent":["import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnInit,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\n\r\n@Directive({\r\n  selector: \"[nivel]\",\r\n})\r\nexport class NivelDirective implements OnInit {\r\n  @Input(\"nivel\")\r\n  value: any;\r\n\r\n  constructor(private el: ElementRef) {}\r\n  ngOnInit(): void {\r\n    this.setLevel();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.value) {\r\n      this.setLevel();\r\n    }\r\n  }\r\n\r\n  private setLevel() {\r\n    this.el.nativeElement.style.fontWeight = 800;\r\n    if (this.value.value < this.value.min) {\r\n      this.el.nativeElement.parentNode.style.color = \"blue\";\r\n    } else if (this.value.value > this.value.max) {\r\n      //this.el.nativeElement.innerText = \"Alto\";\r\n      this.el.nativeElement.parentNode.style.color = \"red\";\r\n    } else {\r\n      //this.el.nativeElement.innerText = \"Medio\";\r\n      this.el.nativeElement.parentNode.style.color = \"grey\";\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnInit,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nexport interface EquipmentTypeData {\r\n  value: string;\r\n  column: string;\r\n}\r\n@Directive({\r\n  selector: \"[trend]\",\r\n})\r\nexport class TrendDirective implements OnInit {\r\n  @Input(\"trend\")\r\n  value: any;\r\n\r\n  constructor(private el: ElementRef) {}\r\n  ngOnInit(): void {\r\n    this.setTrend();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.value) {\r\n      this.setTrend();\r\n    }\r\n  }\r\n\r\n  private setTrend() {\r\n    console.log(this.value);\r\n    const { currentValue, prevValue } = this.value;\r\n\r\n    if (prevValue) {\r\n      if (currentValue < prevValue) {\r\n        this.el.nativeElement.innerHTML = `<i class=\"fas fa-arrow-down\"></i>`;\r\n      } else if (currentValue > prevValue) {\r\n        this.el.nativeElement.innerHTML = `<i class=\"fas fa-arrow-up\"></i>`;\r\n      } else {\r\n        this.el.nativeElement.innerHTML = `<i class=\"fas fa-arrow-right\"></i>`;\r\n      }\r\n\r\n      this.el.nativeElement.innerHTML += ` ${prevValue}`;\r\n    } else {\r\n      this.el.nativeElement.innerHTML = \" - \";\r\n    }\r\n  }\r\n\r\n  // this.el.nativeElement.innerHTML =\r\n  //   '<?xml version=\"1.0\" encoding=\"UTF-8\"?>        <svg class=\"icon-small\" width=\"20px\" height=\"16px\" viewBox=\"0 0 20 16\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">            <g id=\"Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">                <g id=\"Outlined\" transform=\"translate(-272.000000, -1840.000000)\">                    <g id=\"Device\" transform=\"translate(100.000000, 1650.000000)\">                        <g id=\"Outlined-/-Device-/-storage\" transform=\"translate(170.000000, 186.000000)\">                            <g>                                <polygon id=\"Path\" points=\"0 0 24 0 24 24 0 24\"></polygon>                                <path d=\"M2,20 L22,20 L22,16 L2,16 L2,20 Z M4,17 L6,17 L6,19 L4,19 L4,17 Z M2,4 L2,8 L22,8 L22,4 L2,4 Z M6,7 L4,7 L4,5 L6,5 L6,7 Z M2,14 L22,14 L22,10 L2,10 L2,14 Z M4,11 L6,11 L6,13 L4,13 L4,11 Z\" id=\"🔹-Icon-Color\" fill=\"currentColor\"></path>                            </g>                        </g>                    </g>                </g>            </g>        </svg>        ';\r\n  // break;\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { ChangeDetectorRef, Component, ViewEncapsulation } from \"@angular/core\";\r\nimport { BehaviorSubject, Subject } from \"rxjs\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  templateUrl: \"./starter.component.html\",\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: [\"./starter.component.scss\"],\r\n})\r\nexport class StarterComponent {\r\n  loginDisplay = false;\r\n  valorReferencial: any = {};\r\n\r\n  currentDate: string;\r\n\r\n  currentReport: BehaviorSubject<any> = new BehaviorSubject<any>({});\r\n\r\n  fechas: Array<Date> = [];\r\n\r\n  data: any = {};\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private cdRef: ChangeDetectorRef,\r\n    private router: Router\r\n  ) {\r\n    this.http.get(\"assets/data/informe.json\").subscribe((data: any) => {\r\n      this.data = data;\r\n      this.valorReferencial = data.rango_referencial;\r\n      data?.items.forEach((currentItem: any, index) => {\r\n        if (index === data?.items.length - 1) {\r\n          this.currentDate = currentItem.fecha;\r\n          const selectedData = {\r\n            data: currentItem.datos,\r\n            prevData: this.getPrevData(currentItem),\r\n          };\r\n          console.log(selectedData);\r\n          this.currentReport.next(selectedData);\r\n        }\r\n        this.fechas.push(currentItem.fecha);\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onSelectOption(event: any) {\r\n    const filteredData = this.data.items.find(\r\n      (item: any) => item.fecha === event\r\n    );\r\n\r\n    const selectedData = {\r\n      data: filteredData?.datos,\r\n      prevData: this.getPrevData(filteredData),\r\n    };\r\n    console.log(selectedData);\r\n    this.currentReport.next(selectedData);\r\n    this.currentDate = event;\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  getPrevData(currentData: any) {\r\n    const indexPrev = this.data.items.indexOf(currentData) - 1;\r\n    if (indexPrev >= 0) {\r\n      const prevData = this.data.items[indexPrev];\r\n      console.log(\"PrevData\", prevData);\r\n      return prevData?.datos;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  getTypeOfLevel(values: any) {\r\n    const { value, min, max } = values;\r\n\r\n    if (value < min) {\r\n      return \"warning\";\r\n    } else if (value > max) {\r\n      return \"danger\";\r\n    }\r\n    return \"success\";\r\n  }\r\n}\r\n","<div class=\"row pt-4\">\r\n  <div class=\"col-12\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <div class=\"row\">\r\n          <div>\r\n            <h1>Informes Robertin</h1>\r\n          </div>\r\n\r\n          <div class=\"d-flex row\">\r\n            <div class=\"col-2 text-start\">\r\n              <mkt-dropdown\r\n                name=\"Fechas de informes\"\r\n                icon=\"calendar\"\r\n                (onClick)=\"onSelectOption($event)\"\r\n                [options]=\"fechas\"\r\n              ></mkt-dropdown>\r\n            </div>\r\n\r\n            <div class=\"col-10 text-end\">\r\n              <h3>Fecha: {{ currentDate }}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row card\" *ngIf=\"currentReport | async as currentData\">\r\n          <ng-container *ngIf=\"currentData.data\">\r\n            <div class=\"card-body d-flex\">\r\n              <div class=\"col\">Prueba</div>\r\n              <div class=\"col\">Resultados</div>\r\n              <div class=\"col\">Rango referencia</div>\r\n              <div class=\"col\">Nivel</div>\r\n              <div class=\"col\">Tendencia</div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'leucocitos']\"\r\n                  >Leucocitos\r\n                </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.leucocitos?.value }}\r\n                {{ currentData.data?.leucocitos?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.leucocitos.min }} -\r\n                {{ valorReferencial.leucocitos.max }}\r\n              </div>\r\n              <div\r\n                class=\"col justify-content-center\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.lym?.value,\r\n                  min: valorReferencial.lym.min,\r\n                  max: valorReferencial.lym.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    textType=\"pepe\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.leucocitos?.value,\r\n                        min: valorReferencial.leucocitos.min,\r\n                        max: valorReferencial.leucocitos.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.leucocitos?.value\"\r\n                    [max]=\"valorReferencial.leucocitos.max\"\r\n                    height=\"20px\"\r\n                    textType=\"Pepe\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.leucocitos?.value,\r\n                  prevValue: currentData.prevData?.leucocitos?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">%NEU</div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.neu_pct?.value }}\r\n                {{ currentData.data?.neu_pct?.unit }}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col\"></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">%LYM</div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.lym_pct?.value }}\r\n                {{ currentData.data?.lym_pct?.unit }}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col\"></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">%MONO</div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.mon_pct?.value }}\r\n                {{ currentData.data?.mon_pct?.unit }}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col\"></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">%EOS</div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.eos_pct?.value }}\r\n                {{ currentData.data?.eos_pct?.unit }}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col\"></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">%BASO</div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.baso_pct?.value }}\r\n                {{ currentData.data?.baso_pct?.unit }}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col\"></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'neu']\">Neu </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.neu?.value }}\r\n                {{ currentData.data?.neu?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.neu.min }} -\r\n                {{ valorReferencial.neu.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.neu?.value,\r\n                  min: valorReferencial.neu.min,\r\n                  max: valorReferencial.neu.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    textType=\"pepe\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.neu?.value,\r\n                        min: valorReferencial.neu.min,\r\n                        max: valorReferencial.neu.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.neu?.value\"\r\n                    [max]=\"valorReferencial.neu.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.neu?.value,\r\n                  prevValue: currentData.prevData?.neu?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'lym']\">Lym </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.lym?.value }}\r\n                {{ currentData.data?.lym?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.lym.min }} -\r\n                {{ valorReferencial.lym.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.lym?.value,\r\n                  min: valorReferencial.lym.min,\r\n                  max: valorReferencial.lym.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    textType=\"pepe\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.lym?.value,\r\n                        min: valorReferencial.lym.min,\r\n                        max: valorReferencial.lym.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.lym?.value\"\r\n                    [max]=\"valorReferencial.lym.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.lym?.value,\r\n                  prevValue: currentData.prevData?.lym?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'mono']\">Mono </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.mono?.value }}\r\n                {{ currentData.data?.mono?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.mono.min }} -\r\n                {{ valorReferencial.mono.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.mono?.value,\r\n                  min: valorReferencial.mono.min,\r\n                  max: valorReferencial.mono.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    textType=\"pepe\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.mono?.value,\r\n                        min: valorReferencial.mono.min,\r\n                        max: valorReferencial.mono.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.mono?.value\"\r\n                    [max]=\"valorReferencial.mono.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.mono?.value,\r\n                  prevValue: currentData.prevData?.mono?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'eos']\">Eos </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.eos?.value }}\r\n                {{ currentData.data?.eos?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.eos.min }} -\r\n                {{ valorReferencial.eos.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.eos?.value,\r\n                  min: valorReferencial.eos.min,\r\n                  max: valorReferencial.eos.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.eos?.value,\r\n                        min: valorReferencial.eos.min,\r\n                        max: valorReferencial.eos.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.eos?.value\"\r\n                    [max]=\"valorReferencial.eos.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.eos?.value,\r\n                  prevValue: currentData.prevData?.eos?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'baso']\">BASO </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.baso?.value }}\r\n                {{ currentData.data?.baso?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.baso.min }} -\r\n                {{ valorReferencial.baso.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.baso?.value,\r\n                  min: valorReferencial.baso.min,\r\n                  max: valorReferencial.baso.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.baso?.value,\r\n                        min: valorReferencial.baso.min,\r\n                        max: valorReferencial.baso.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.baso?.value\"\r\n                    [max]=\"valorReferencial.baso.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.baso?.value,\r\n                  prevValue: currentData.prevData?.baso?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'plq']\">PLQ </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.plq?.value }}\r\n                {{ currentData.data?.plq?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.plq.min }} -\r\n                {{ valorReferencial.plq.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.plq?.value,\r\n                  min: valorReferencial.plq.min,\r\n                  max: valorReferencial.plq.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.plq?.value,\r\n                        min: valorReferencial.plq.min,\r\n                        max: valorReferencial.plq.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.plq?.value\"\r\n                    [max]=\"valorReferencial.plq.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.plq?.value,\r\n                  prevValue: currentData.prevData?.plq?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'mpv']\">MPV </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.mpv?.value }}\r\n                {{ currentData.data?.mpv?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.mpv.min }} -\r\n                {{ valorReferencial.mpv.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.mpv?.value,\r\n                  min: valorReferencial.mpv.min,\r\n                  max: valorReferencial.mpv.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.mpv?.value,\r\n                        min: valorReferencial.mpv.min,\r\n                        max: valorReferencial.mpv.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.mpv?.value\"\r\n                    [max]=\"valorReferencial.mpv.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.mpv?.value,\r\n                  prevValue: currentData.prevData?.mpv?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'pdw']\">PDW </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.pdw?.value }}\r\n                {{ currentData.data?.pdw?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.pdw.min }} -\r\n                {{ valorReferencial.pdw.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.pdw?.value,\r\n                  min: valorReferencial.pdw.min,\r\n                  max: valorReferencial.pdw.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.pdw?.value,\r\n                        min: valorReferencial.pdw.min,\r\n                        max: valorReferencial.pdw.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.pdw?.value\"\r\n                    [max]=\"valorReferencial.pdw.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.pdw?.value,\r\n                  prevValue: currentData.prevData?.pdw?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'pct']\">PCT </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.pct?.value }}\r\n                {{ currentData.data?.pct?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.pct.min }} -\r\n                {{ valorReferencial.pct.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.pct?.value,\r\n                  min: valorReferencial.pct.min,\r\n                  max: valorReferencial.pct.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.pct?.value,\r\n                        min: valorReferencial.pct.min,\r\n                        max: valorReferencial.pct.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.pct?.value\"\r\n                    [max]=\"valorReferencial.pct.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.pct?.value,\r\n                  prevValue: currentData.prevData?.pct?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'eritrocitos']\"\r\n                  >Eritrocitos\r\n                </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.eritrocitos?.value }}\r\n                {{ currentData.data?.eritrocitos?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.eritrocitos.min }} -\r\n                {{ valorReferencial.eritrocitos.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.eritrocitos?.value,\r\n                  min: valorReferencial.eritrocitos.min,\r\n                  max: valorReferencial.eritrocitos.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.eritrocitos?.value,\r\n                        min: valorReferencial.eritrocitos.min,\r\n                        max: valorReferencial.eritrocitos.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.eritrocitos?.value\"\r\n                    [max]=\"valorReferencial.eritrocitos.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.eritrocitos?.value,\r\n                  prevValue: currentData.prevData?.eritrocitos?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'hct']\">HCT </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.hct?.value }}\r\n                {{ currentData.data?.hct?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.hct.min }} -\r\n                {{ valorReferencial.hct.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.hct?.value,\r\n                  min: valorReferencial.hct.min,\r\n                  max: valorReferencial.hct.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.hct?.value,\r\n                        min: valorReferencial.hct.min,\r\n                        max: valorReferencial.hct.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.hct?.value\"\r\n                    [max]=\"valorReferencial.hct.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.hct?.value,\r\n                  prevValue: currentData.prevData?.hct?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'hgb']\">HGB </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.hgb?.value }}\r\n                {{ currentData.data?.hgb?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.hgb.min }} -\r\n                {{ valorReferencial.hgb.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.hgb?.value,\r\n                  min: valorReferencial.hgb.min,\r\n                  max: valorReferencial.hgb.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.hgb?.value,\r\n                        min: valorReferencial.hgb.min,\r\n                        max: valorReferencial.hgb.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.hgb?.value\"\r\n                    [max]=\"valorReferencial.hgb.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.hgb?.value,\r\n                  prevValue: currentData.prevData?.hgb?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'mcv']\">MCV </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.mcv?.value }}\r\n                {{ currentData.data?.mcv?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.mcv.min }} -\r\n                {{ valorReferencial.mcv.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.mcv?.value,\r\n                  min: valorReferencial.mcv.min,\r\n                  max: valorReferencial.mcv.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.mcv?.value,\r\n                        min: valorReferencial.mcv.min,\r\n                        max: valorReferencial.mcv.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.mcv?.value\"\r\n                    [max]=\"valorReferencial.mcv.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.mcv?.value,\r\n                  prevValue: currentData.prevData?.mcv?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'mch']\">MCH </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.mch?.value }}\r\n                {{ currentData.data?.mch?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.mch.min }} -\r\n                {{ valorReferencial.mch.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.mch?.value,\r\n                  min: valorReferencial.mch.min,\r\n                  max: valorReferencial.mch.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.mch?.value,\r\n                        min: valorReferencial.mch.min,\r\n                        max: valorReferencial.mch.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.mch?.value\"\r\n                    [max]=\"valorReferencial.mch.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.mch?.value,\r\n                  prevValue: currentData.prevData?.mch?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'mchc']\">MCHC </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.mchc?.value }}\r\n                {{ currentData.data?.mchc?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.mchc.min }} -\r\n                {{ valorReferencial.mchc.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.mchc?.value,\r\n                  min: valorReferencial.mchc.min,\r\n                  max: valorReferencial.mchc.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.mchc?.value,\r\n                        min: valorReferencial.mchc.min,\r\n                        max: valorReferencial.mchc.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.mchc?.value\"\r\n                    [max]=\"valorReferencial.mchc.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.mchc?.value,\r\n                  prevValue: currentData.prevData?.mchc?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'rdw']\">RDW </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.rdw?.value }}\r\n                {{ currentData.data?.rdw?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.rdw.min }} -\r\n                {{ valorReferencial.rdw.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.rdw?.value,\r\n                  min: valorReferencial.rdw.min,\r\n                  max: valorReferencial.rdw.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.rdw?.value,\r\n                        min: valorReferencial.rdw.min,\r\n                        max: valorReferencial.rdw.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.rdw?.value\"\r\n                    [max]=\"valorReferencial.rdw.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.rdw?.value,\r\n                  prevValue: currentData.prevData?.rdw?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">%RETIC</div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.retic_pct?.value }}\r\n                {{ currentData.data?.retic_pct?.unit }}\r\n              </div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col\"></div>\r\n              <div class=\"col\"></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'retic']\">RETIC </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.retic?.value }}\r\n                {{ currentData.data?.retic?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.retic.min }} -\r\n                {{ valorReferencial.retic.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.retic?.value,\r\n                  min: valorReferencial.retic.min,\r\n                  max: valorReferencial.retic.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.retic?.value,\r\n                        min: valorReferencial.retic.min,\r\n                        max: valorReferencial.retic.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.retic?.value\"\r\n                    [max]=\"valorReferencial.retic.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.retic?.value,\r\n                  prevValue: currentData.prevData?.retic?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n            <div class=\"card-body d-flex border-bottom border-dark\">\r\n              <div class=\"col\">\r\n                <a [routerLink]=\"['/starter/line-chart', 'ret_he']\">RET HE </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ currentData.data?.ret_he?.value }}\r\n                {{ currentData.data?.ret_he?.unit }}\r\n              </div>\r\n              <div class=\"col\">\r\n                {{ valorReferencial.ret_he.min }} -\r\n                {{ valorReferencial.ret_he.max }}\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [nivel]=\"{\r\n                  value: currentData.data?.ret_he?.value,\r\n                  min: valorReferencial.ret_he.min,\r\n                  max: valorReferencial.ret_he.max\r\n                }\"\r\n              >\r\n                <p style=\"padding-right: 10px\">\r\n                  <ngb-progressbar\r\n                    [showValue]=\"true\"\r\n                    style=\"background-color: #dac8c8\"\r\n                    [type]=\"\r\n                      getTypeOfLevel({\r\n                        value: currentData.data?.ret_he?.value,\r\n                        min: valorReferencial.ret_he.min,\r\n                        max: valorReferencial.ret_he.max\r\n                      })\r\n                    \"\r\n                    [value]=\"currentData.data?.ret_he?.value\"\r\n                    [max]=\"valorReferencial.ret_he.max\"\r\n                    height=\"20px\"\r\n                  >\r\n                  </ngb-progressbar>\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"col\"\r\n                [trend]=\"{\r\n                  currentValue: currentData.data?.ret_he?.value,\r\n                  prevValue: currentData.prevData?.ret_he?.value\r\n                }\"\r\n              ></div>\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { MktCardModule, MktDropdownModule } from \"marlin-cdk\";\r\nimport { FeatherModule } from \"angular-feather\";\r\nimport { StarterComponent } from \"./starter.component\";\r\nimport { TranslateLoader, TranslateModule } from \"@ngx-translate/core\";\r\nimport { HttpLoaderFactory } from \"./../app.module\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { NgApexchartsModule } from \"ng-apexcharts\";\r\nimport { NivelDirective } from \"./components/nivel.directive\";\r\nimport { TrendDirective } from \"./components/trend.directive\";\r\nimport { GraphicsComponent } from \"../graphics/graphics.component\";\r\nimport {\r\n  NgbProgressbar,\r\n  NgbProgressbarModule,\r\n} from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    data: {\r\n      title: \"Starter Page\",\r\n      urls: [\r\n        { title: \"Dashboard\", url: \"/dashboard\" },\r\n        { title: \"Starter Page\" },\r\n      ],\r\n    },\r\n    component: StarterComponent,\r\n  },\r\n  {\r\n    path: \"line-chart/:id\",\r\n    data: {\r\n      title: \"Line Chart\",\r\n      urls: [\r\n        { title: \"Starter \", url: \"/dashboard\" },\r\n        { title: \"Line Chart\", url: \"/line-chart\" },\r\n      ],\r\n    },\r\n    component: GraphicsComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [StarterComponent, NivelDirective, TrendDirective],\r\n  imports: [\r\n    FormsModule,\r\n    NgApexchartsModule,\r\n    FeatherModule,\r\n    CommonModule,\r\n    MktCardModule,\r\n    MktDropdownModule,\r\n    NgbProgressbarModule,\r\n    RouterModule.forChild(routes),\r\n    TranslateModule.forChild({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient],\r\n      },\r\n    }),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class StarterModule {}\r\n"],"names":[],"sourceRoot":"webpack:///"}